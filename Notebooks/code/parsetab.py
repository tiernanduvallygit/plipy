
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BEGIN DUP ELSE FALSE ID IF INVERT NUMBER OR REPEAT STRING THEN TRUE VARIABLE WHILE\n prog : cmds\n\n cmds : cmd cmds\n      | empty\n\n cmd : dictionarycmd\n     | computecmd\n\n dictionarycmd : VARIABLE ID\n\n computecmds : computecmd computecmds\n            |  empty\n\n computecmd : NUMBER\n            | STRING\n            | TRUE\n            | FALSE\n            | ID\n            | '+'\n            | '-'\n            | '*'\n            | '/'\n            | AND\n            | OR\n            | INVERT\n            | '='\n            | '<'\n            | '>'\n            | '.'\n            | '!'\n            | '@'\n            | DUP\n            | IF computecmds else_opt THEN\n            | BEGIN computecmds WHILE computecmds REPEAT\n\nelse_opt : ELSE computecmds\n         |  empty\n    empty :"
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,40,43,],[-32,0,-1,-32,-3,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-2,-6,-28,-29,]),'VARIABLE':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,40,43,],[7,7,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-6,-28,-29,]),'NUMBER':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[9,9,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,9,9,-6,9,9,9,-28,-29,]),'STRING':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[10,10,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,10,10,-6,10,10,10,-28,-29,]),'TRUE':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[11,11,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,11,11,-6,11,11,11,-28,-29,]),'FALSE':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[12,12,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,12,12,-6,12,12,12,-28,-29,]),'ID':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[8,8,-4,-5,30,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,8,8,-6,8,8,8,-28,-29,]),'+':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[13,13,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,13,13,-6,13,13,13,-28,-29,]),'-':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[14,14,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,14,14,-6,14,14,14,-28,-29,]),'*':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[15,15,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,15,15,-6,15,15,15,-28,-29,]),'/':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[16,16,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,16,16,-6,16,16,16,-28,-29,]),'AND':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[17,17,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,17,17,-6,17,17,17,-28,-29,]),'OR':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[18,18,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,18,18,-6,18,18,18,-28,-29,]),'INVERT':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[19,19,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,19,19,-6,19,19,19,-28,-29,]),'=':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[20,20,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,20,20,-6,20,20,20,-28,-29,]),'<':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[21,21,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,21,21,-6,21,21,21,-28,-29,]),'>':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[22,22,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,22,22,-6,22,22,22,-28,-29,]),'.':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[23,23,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,23,23,-6,23,23,23,-28,-29,]),'!':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[24,24,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,24,24,-6,24,24,24,-28,-29,]),'@':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[25,25,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,25,25,-6,25,25,25,-28,-29,]),'DUP':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[26,26,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,26,26,-6,26,26,26,-28,-29,]),'IF':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[27,27,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,27,27,-6,27,27,27,-28,-29,]),'BEGIN':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,36,39,40,43,],[28,28,-4,-5,-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,28,28,-6,28,28,28,-28,-29,]),'ELSE':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,38,40,43,],[-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-32,36,-32,-8,-7,-28,-29,]),'THEN':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,35,36,37,38,40,41,43,],[-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-32,-32,-32,-8,40,-32,-31,-7,-28,-30,-29,]),'WHILE':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,38,40,43,],[-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-32,-32,-8,39,-7,-28,-29,]),'REPEAT':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,38,39,40,42,43,],[-13,-9,-10,-11,-12,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-32,-8,-7,-32,-28,43,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'cmds':([0,3,],[2,29,]),'cmd':([0,3,],[3,3,]),'empty':([0,3,27,28,31,32,36,39,],[4,4,33,33,37,33,33,33,]),'dictionarycmd':([0,3,],[5,5,]),'computecmd':([0,3,27,28,32,36,39,],[6,6,32,32,32,32,32,]),'computecmds':([27,28,32,36,39,],[31,34,38,41,42,]),'else_opt':([31,],[35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> cmds','prog',1,'p_grammar','miniforth_gram.py',9),
  ('cmds -> cmd cmds','cmds',2,'p_grammar','miniforth_gram.py',11),
  ('cmds -> empty','cmds',1,'p_grammar','miniforth_gram.py',12),
  ('cmd -> dictionarycmd','cmd',1,'p_grammar','miniforth_gram.py',14),
  ('cmd -> computecmd','cmd',1,'p_grammar','miniforth_gram.py',15),
  ('dictionarycmd -> VARIABLE ID','dictionarycmd',2,'p_grammar','miniforth_gram.py',17),
  ('computecmds -> computecmd computecmds','computecmds',2,'p_grammar','miniforth_gram.py',19),
  ('computecmds -> empty','computecmds',1,'p_grammar','miniforth_gram.py',20),
  ('computecmd -> NUMBER','computecmd',1,'p_grammar','miniforth_gram.py',22),
  ('computecmd -> STRING','computecmd',1,'p_grammar','miniforth_gram.py',23),
  ('computecmd -> TRUE','computecmd',1,'p_grammar','miniforth_gram.py',24),
  ('computecmd -> FALSE','computecmd',1,'p_grammar','miniforth_gram.py',25),
  ('computecmd -> ID','computecmd',1,'p_grammar','miniforth_gram.py',26),
  ('computecmd -> +','computecmd',1,'p_grammar','miniforth_gram.py',27),
  ('computecmd -> -','computecmd',1,'p_grammar','miniforth_gram.py',28),
  ('computecmd -> *','computecmd',1,'p_grammar','miniforth_gram.py',29),
  ('computecmd -> /','computecmd',1,'p_grammar','miniforth_gram.py',30),
  ('computecmd -> AND','computecmd',1,'p_grammar','miniforth_gram.py',31),
  ('computecmd -> OR','computecmd',1,'p_grammar','miniforth_gram.py',32),
  ('computecmd -> INVERT','computecmd',1,'p_grammar','miniforth_gram.py',33),
  ('computecmd -> =','computecmd',1,'p_grammar','miniforth_gram.py',34),
  ('computecmd -> <','computecmd',1,'p_grammar','miniforth_gram.py',35),
  ('computecmd -> >','computecmd',1,'p_grammar','miniforth_gram.py',36),
  ('computecmd -> .','computecmd',1,'p_grammar','miniforth_gram.py',37),
  ('computecmd -> !','computecmd',1,'p_grammar','miniforth_gram.py',38),
  ('computecmd -> @','computecmd',1,'p_grammar','miniforth_gram.py',39),
  ('computecmd -> DUP','computecmd',1,'p_grammar','miniforth_gram.py',40),
  ('computecmd -> IF computecmds else_opt THEN','computecmd',4,'p_grammar','miniforth_gram.py',41),
  ('computecmd -> BEGIN computecmds WHILE computecmds REPEAT','computecmd',5,'p_grammar','miniforth_gram.py',42),
  ('else_opt -> ELSE computecmds','else_opt',2,'p_grammar','miniforth_gram.py',44),
  ('else_opt -> empty','else_opt',1,'p_grammar','miniforth_gram.py',45),
  ('empty -> <empty>','empty',0,'p_empty','miniforth_gram.py',50),
]
